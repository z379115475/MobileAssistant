class BubblePopup: Behavior {
	const RADIUS = 10;
	const ARROW_HEIGHT = 4;
	const STROKE_WIDTH = 1.0;
	const STROKE_COLOR = color(0xCF,0xAF,0x33);
	const BACK_COLOR = color(0xFF,0xFF,0xFF);

	function attached() { 
		this.paintBackground = this.drawBackground;
	}

	function getShape()
	{
		var shape = this.shape;
		if(!shape) 
		{
			shape = this.shape = new Graphics.Path();
			this.shapeWidth = null;
			this.shapeHeight = null;
		}

		var (x,y,w,h) = this.box(#rectw);

		if( this.shapeWidth == w && this.shapeHeight == h)
		return shape; // nothing to do already calculated

		shape.reset();

		// lines shall go through pixels middles:
		x += STROKE_WIDTH / 2; y -= STROKE_WIDTH / 2; w -= STROKE_WIDTH; h -= STROKE_WIDTH;

		const r = RADIUS;
		const ah = ARROW_HEIGHT;

		shape          
		.moveTo(x+r, y)
		// that arrow
		.lineTo(x+w/3-ah,y) 
		.lineTo(x+w/3,y-ah)
		.lineTo(x+w/3+ah,y)
		// round rect
		.arcTo(x+w, y,   x+w, y+h, r)
		.arcTo(x+w, y+h, x,   y+h, r)
		.arcTo(x,   y+h, x,   y,   r)
		.arcTo(x,   y,   x+w, y,   r)              
		.close();
		return shape; 
	}      

	function drawBackground( gfx ) {
		if(var shape = this.getShape()) {
			gfx.lineWidth(STROKE_WIDTH)
			.lineColor(STROKE_COLOR)
			.fillColor(BACK_COLOR)
			.drawPath( shape );
		}
	}
}